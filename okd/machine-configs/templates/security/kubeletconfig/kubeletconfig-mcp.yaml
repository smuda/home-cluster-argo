{{ if .Values.kubeletConfigs.enabled }}
{{- range $mcpName := .Values.machineConfigPools }}
---
apiVersion: machineconfiguration.openshift.io/v1
kind: KubeletConfig
metadata:
  name: "mcp-{{ $mcpName }}"
spec:
  machineConfigPoolSelector:
    matchLabels:
      "pools.operator.machineconfiguration.openshift.io/{{ $mcpName }}": ""
  {{- if and $.Values.kubeletConfigs.autosizeReserved.enabled  (has $mcpName $.Values.kubeletConfigs.autosizeReserved.targetMachineConfigPools)  }}
  autoSizingReserved: true
  {{- end }}
  kubeletConfig:
    {{- if and $.Values.kubeletConfigs.eventRecordQPS.enabled (has $mcpName $.Values.kubeletConfigs.eventRecordQPS.targetMachineConfigPools) }}
    eventRecordQPS: 5
    {{- end }}
    {{- if and $.Values.kubeletConfigs.evictionConfig.enabled (has $mcpName $.Values.kubeletConfigs.evictionConfig.targetMachineConfigPools) }}
    evictionPressureTransitionPeriod: 0s
    evictionMaxPodGracePeriod: 120
    {{- end }}
    {{- if and $.Values.kubeletConfigs.evictionSoft.enabled (has $mcpName $.Values.kubeletConfigs.evictionSoft.targetMachineConfigPools) }}
    evictionSoft:
      imagefs.available: "15%"
      imagefs.inodesFree: "5%"
      memory.available: "500Mi"
      nodefs.available: "10%"
      nodefs.inodesFree: "5%"
    evictionSoftGracePeriod:
      imagefs.available: "1m30s"
      imagefs.inodesFree: "1m30s"
      memory.available: "1m30s"
      nodefs.available: "1m30s"
      nodefs.inodesFree: "1m30s"
    {{- end }}
    {{- if and $.Values.kubeletConfigs.evictionHard.enabled (has $mcpName $.Values.kubeletConfigs.evictionHard.targetMachineConfigPools) }}
    evictionHard:
      imagefs.available: "10%"
      imagefs.inodesFree: "4%"
      memory.available: "200Mi"
      nodefs.available: "5%"
      nodefs.inodesFree: "4%"
    {{- end }}
    {{- if and $.Values.kubeletConfigs.makeIPTablesUtilChains.enabled (has $mcpName $.Values.kubeletConfigs.makeIPTablesUtilChains.targetMachineConfigPools) }}
    makeIPTablesUtilChains: true
    {{- end }}
    {{- if and $.Values.kubeletConfigs.protectKernelDefaults.enabled (has $mcpName $.Values.kubeletConfigs.protectKernelDefaults.targetMachineConfigPools) }}
    protectKernelDefaults: true
    {{- end }}
    {{- if and $.Values.kubeletConfigs.streamingConnectionIdleTimeout.enabled (has $mcpName $.Values.kubeletConfigs.streamingConnectionIdleTimeout.targetMachineConfigPools) }}
    streamingConnectionIdleTimeout: 5m0s
    {{- end }}
    {{- if and $.Values.kubeletConfigs.tlsCipherSuites.enabled (has $mcpName $.Values.kubeletConfigs.tlsCipherSuites.targetMachineConfigPools) }}
    tlsCipherSuites:
      - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
      - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
      - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
    {{- end }}
{{- end }}
{{- end }}
